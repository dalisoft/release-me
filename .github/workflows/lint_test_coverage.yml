name: Lint and Test with Coverage

on:
  push:
    branches: [master]
  pull_request_target:
    branches: [master]
  workflow_call:
  workflow_dispatch:

env:
  CI: true

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Lint
        shell: bash
        run: |
          sudo apt install shellcheck -y
          shellcheck *.sh
  test:
    needs: lint
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Install current Bash on macOS
        if: runner.os == 'macOS'
        shell: bash
        run: brew install bash wget

      - name: Test
        shell: bash
        env:
          GIT_USERNAME: ${{ vars.GIT_FAKE_USERNAME }}
          GIT_EMAIL: ${{ vars.GIT_FAKE_EMAIL }}
          GPG_KEY_ID: ${{ vars.GPG_FAKE_KEY_ID }}
          GPG_KEY: ${{ vars.GPG_FAKE_KEY }}
          GPG_KEY_ID_UNSAFE: ${{ vars.GPG_FAKE_KEY_ID_UNSAFE }}
          GPG_KEY_UNSAFE: ${{ vars.GPG_FAKE_KEY_UNSAFE }}
          GPG_PASSPHRASE: ${{ vars.GPG_FAKE_PASSPHRASE }}
          GITHUB_TOKEN: "ACTUAL_YOUR_TOKEN"
        run: |
          wget https://raw.githubusercontent.com/pgrange/bash_unit/master/bash_unit --continue
          chmod 755 ./bash_unit
          FORCE_COLOR=true ./bash_unit tests/**/*.test.sh
  coverage:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Coverage
        shell: bash
        env:
          GIT_USERNAME: ${{ vars.GIT_FAKE_USERNAME }}
          GIT_EMAIL: ${{ vars.GIT_FAKE_EMAIL }}
          GPG_KEY_ID: ${{ vars.GPG_FAKE_KEY_ID }}
          GPG_KEY: ${{ vars.GPG_FAKE_KEY }}
          GPG_KEY_ID_UNSAFE: ${{ vars.GPG_FAKE_KEY_ID_UNSAFE }}
          GPG_KEY_UNSAFE: ${{ vars.GPG_FAKE_KEY_UNSAFE }}
          GPG_PASSPHRASE: ${{ vars.GPG_FAKE_PASSPHRASE }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          wget https://raw.githubusercontent.com/pgrange/bash_unit/master/bash_unit --continue --debug
          chmod 755 ./bash_unit
          bundle exec bashcov ./bash_unit tests/**/*.test.sh

      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          format: simplecov
