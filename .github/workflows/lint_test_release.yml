# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Lint, Test and Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CI: true
  GIT_USERNAME: ${{ vars.GIT_USERNAME }}
  GIT_EMAIL: ${{ vars.GIT_EMAIL }}
  GPG_KEY_ID: ${{ vars.GPG_KEY_ID }}
  GPG_KEY: ${{ secrets.GPG_KEY }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Lint
        shell: bash
        run: |
            sudo apt install shellcheck -y
            shellcheck *.sh
  test:
    needs: lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Test w/ Coverage
        shell: bash
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          bash <(curl -s https://raw.githubusercontent.com/pgrange/bash_unit/master/install.sh)
          ROOT_DIR=$(pwd) bundle exec bashcov ./bash_unit --mute **.test.sh
          git add -A coverage/coverage_badge_total.svg
          git commit -m "chore(tests): update coverage"
          git push

        # - run: bundle exec rspec spec
        # - run: bundle exec coveralls push

      - name: Report Coveralls
        uses: coverallsapp/github-action@v2
        with:
          format: simplecov
          github-token: ${{ secrets.GITHUB_TOKEN }}
  release:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        shell: bash
        run: |
          bash ./release.sh --plugins=git,github-release --pre-release
